(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){var n=e.baseUrl,r=e.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=n,this._headers=r}var n,r;return n=t,(r=[{key:"_processResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"_get",value:function(e){return fetch("".concat(this._baseUrl).concat(e),{headers:this._headers}).then(this._processResponse)}},{key:"_getUserInfo",value:function(){return this._get("/users/me")}},{key:"_getInitialCards",value:function(){return this._get("/cards")}},{key:"getInitialData",value:function(){return Promise.all([this._getUserInfo(),this._getInitialCards()])}},{key:"updateUserInfo",value:function(e){var t=e.name,n=e.description;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:n})}).then(this._processResponse)}},{key:"addCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._processResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._processResponse)}},{key:"likeCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then(this._processResponse)}},{key:"removeLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then(this._processResponse)}},{key:"updateAvatar",value:function(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._processResponse)}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){var r,o,i=this,a=t.data,u=t.handleCardClick,c=t.handleLikeClick,s=t.handleDeleteClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o=function(){i._element.remove()},(r="remove")in this?Object.defineProperty(this,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[r]=o,this._cardData=a,this._templateSelector=n,this._handleCardClick=u,this._handleLikeClick=c,this._handleDeleteClick=s}var t,r;return t=e,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".gallery__item").cloneNode(!0)}},{key:"_setEventListeners",value:function(){var e=this;this._imageElement.addEventListener("click",(function(){return e._handleCardClick(e)})),this._element.querySelector(".button_type_like").addEventListener("click",(function(){return e._handleLikeClick(e)})),null!==this._deleteButton&&this._deleteButton.addEventListener("click",(function(){return e._handleDeleteClick(e)}))}},{key:"getName",value:function(){return this._cardData.name}},{key:"getLink",value:function(){return this._cardData.link}},{key:"getId",value:function(){return this._cardData._id}},{key:"isLiked",value:function(){var e=this;return this._cardData.likes.some((function(t){return t._id===e._cardData.currentUserId}))}},{key:"updateLikes",value:function(e){this._cardData.likes=e.likes,this._processLikes()}},{key:"_processLikes",value:function(){this.isLiked()?this._likeButton.classList.add("button_type_like-active"):this._likeButton.classList.remove("button_type_like-active"),this._likeCounter.textContent=this._cardData.likes.length}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._imageElement=this._element.querySelector(".gallery__image"),this._deleteButton=this._element.querySelector(".button_type_trash"),this._likeButton=this._element.querySelector(".button_type_like"),this._likeCounter=this._element.querySelector(".gallery__like-counter"),this._cardData.owner._id!==this._cardData.currentUserId&&this._deleteButton.remove(),this._processLikes(),this._setEventListeners(),this._element.querySelector(".gallery__title").textContent=this.getName(),this._imageElement.alt=this.getName(),this._imageElement.src=this.getLink(),this._element}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var a=function(){function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),i(this,"_disableSubmitButton",(function(){var e=r._params.inactiveButtonClass;r._submitButton.classList.add(e),r._submitButton.setAttribute("disabled",!0)})),i(this,"_enableSubmitButton",(function(){var e=r._params.inactiveButtonClass;r._submitButton.classList.remove(e),r._submitButton.removeAttribute("disabled")})),this._form=n,this._params=t,this._inputs=Array.from(n.querySelectorAll(t.inputSelector)),this._submitButton=n.querySelector(t.submitButtonSelector)}var t,n;return t=e,(n=[{key:"_hasInvalidInput",value:function(){return this._inputs.some((function(e){return!e.validity.valid}))}},{key:"_toggleSubmitButton",value:function(){this._hasInvalidInput()?this._disableSubmitButton():this._enableSubmitButton()}},{key:"_getErrorElement",value:function(e){return this._form.querySelector(".".concat(e.name,"-input-error"))}},{key:"_showInputError",value:function(e){var t=this._params,n=t.inputErrorClass,r=t.errorClass,o=this._getErrorElement(e);e.classList.add(n),o.textContent=e.validationMessage,o.classList.add(r)}},{key:"_hideInputError",value:function(e){var t=this._params,n=t.inputErrorClass,r=t.errorClass,o=this._getErrorElement(e);e.classList.remove(n),o.classList.remove(r),o.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_setEventListeners",value:function(){var e=this;this._inputs.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleSubmitButton()}))}))}},{key:"resetValidation",value:function(){var e=this;this._inputs.forEach((function(t){return e._hideInputError(t)})),this._toggleSubmitButton()}},{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(e){return e.preventDefault()})),this._setEventListeners()}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var s=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),c(this,"_handleEscClose",(function(e){"Escape"===e.key&&n.close()})),c(this,"_handleClose",(function(e){(e.target===e.currentTarget||e.target.classList.contains("button_type_close"))&&n.close()})),this._element=document.querySelector(t)}var t,n;return t=e,(n=[{key:"setEventListeners",value:function(){this._element.addEventListener("click",this._handleClose)}},{key:"open",value:function(){this._element.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscClose)}},{key:"close",value:function(){this._element.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscClose)}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(){return p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=y(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},p.apply(this,arguments)}function y(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_(e)););return e}function h(e,t){return h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},h(e,t)}function d(e,t){if(t&&("object"===l(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function _(e){return _=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},_(e)}var b=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&h(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=_(r);if(o){var n=_(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return d(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._image=t._element.querySelector(".preview__image"),t._title=t._element.querySelector(".preview__title"),t}return t=a,(n=[{key:"open",value:function(e){var t=e.getName();this._title.textContent=t,this._image.alt=t,this._image.src=e.getLink(),p(_(a.prototype),"open",this).call(this)}}])&&f(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function m(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function g(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?m(Object(n),!0).forEach((function(t){k(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):m(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function k(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function w(){return w="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=j(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},w.apply(this,arguments)}function j(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}function S(e,t){return S=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},S(e,t)}function E(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function P(e){return P=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},P(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&S(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=P(r);if(o){var n=P(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return E(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._submit=t,n._form=n._element.querySelector(".popup__form"),n._inputs=Array.from(n._form.querySelectorAll(".popup__input")),n._submitButton=n._element.querySelector(".button_type_save"),n._submitButtonCaption=n._submitButton.textContent,n}return t=a,(n=[{key:"_getInputValues",value:function(){return this._inputs.reduce((function(e,t){var n=t.name,r=t.value;return g(g({},e),{},k({},n,r))}),{})}},{key:"renderLoading",value:function(e){this._submitButton.textContent=e?"Сохранение...":this._submitButtonCaption}},{key:"setEventListeners",value:function(){var e=this;w(P(a.prototype),"setEventListeners",this).call(this),this._element.addEventListener("submit",(function(t){t.preventDefault(),e._submit(e._getInputValues())}))}},{key:"close",value:function(){w(P(a.prototype),"close",this).call(this),this._form.reset()}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function I(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function D(){return D="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=R(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},D.apply(this,arguments)}function R(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=U(e)););return e}function q(e,t){return q=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},q(e,t)}function T(e,t){if(t&&("object"===L(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function U(e){return U=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},U(e)}var A=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&q(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=U(r);if(o){var n=U(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return T(this,e)});function a(){return I(this,a),i.apply(this,arguments)}return t=a,(n=[{key:"setAction",value:function(e){this._action=e}},{key:"setEventListeners",value:function(){var e=this;D(U(a.prototype),"setEventListeners",this).call(this),this._element.addEventListener("submit",(function(t){t.preventDefault(),e._action()}))}}])&&B(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(s);function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var V=function(){function e(t){var n=t.nameSelector,r=t.descriptionSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._id=null,this._name=document.querySelector(n),this._description=document.querySelector(r),this._avatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,description:this._description.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about,r=e.avatar,o=e._id;this._id=o,this._name.textContent=t,this._description.textContent=n,this._avatar.style.backgroundImage="url(".concat(r,")")}}])&&x(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function N(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var J=function(){function e(t,n){var r=t.data,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,n=[{key:"addItem",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];t?this._container.prepend(e):this._container.append(e)}},{key:"renderItems",value:function(){var e=this;this._renderedItems.forEach((function(t){e._renderer(t)}))}}],n&&N(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),H=document.forms.addCard,M=document.forms.userProfile,z=M.querySelector(".popup__input_property_name"),$=M.querySelector(".popup__input_property_description"),F=document.querySelector(".button_type_edit"),G=document.querySelector(".button_type_add"),K=document.querySelector(".profile__avatar"),Q=function(e){console.log(e)};function W(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function X(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Y(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?X(Object(n),!0).forEach((function(t){Z(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):X(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Z(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var ee,te,ne,re=new t({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-41",headers:{authorization:"4e0acfe9-d71b-4358-91af-c8fd963442f5","Content-Type":"application/json"}}),oe={};te=(ee={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".button",inactiveButtonClass:"button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"}).formSelector,ne=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(ee,["formSelector"]),Array.from(document.querySelectorAll(te)).forEach((function(e){var t=new a(ne,e);t.enableValidation(),oe[e.getAttribute("name")]=t}));var ie=new V({nameSelector:".profile__title",descriptionSelector:".profile__description",avatarSelector:".profile__avatar"}),ae=new b(".popup_type_preview"),ue=new A(".popup_type_confirm"),ce=function(e){var t=new r({data:Y({currentUserId:ie._id},e),handleCardClick:function(){ae.open(t)},handleLikeClick:function(e){(e.isLiked()?re.removeLike(e.getId()):re.likeCard(e.getId())).then((function(t){e.updateLikes(t)})).catch(Q)},handleDeleteClick:function(e){ue.open(),ue.setAction((function(){re.deleteCard(e.getId()).then((function(){e.remove(),ue.close()})).catch(Q)}))}},"#gallery-item-template");return t.generateCard()},se=new J({data:[],renderer:function(e){var t=ce(e);se.addItem(t)}},".gallery");re.getInitialData().then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return W(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?W(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];ie.setUserInfo(o),i.forEach((function(e){var t=ce(e);se.addItem(t,!1)}))})).catch(Q);var le=new C(".popup_type_add-card",(function(e){le.renderLoading(!0),re.addCard(e).then((function(e){var t=ce(e);se.addItem(t),le.close()})).catch(Q).finally((function(){le.renderLoading(!1)}))})),fe=new C(".popup_type_edit-profile",(function(e){fe.renderLoading(!0),re.updateUserInfo(e).then((function(e){ie.setUserInfo(e),fe.close()})).catch(Q).finally((function(){fe.renderLoading(!1)}))})),pe=new C(".popup_type_avatar",(function(e){pe.renderLoading(!0),re.updateAvatar(e).then((function(e){ie.setUserInfo(e),pe.close()})).catch(Q).finally((function(){pe.renderLoading(!1)}))}));[ae,le,fe,ue,pe].forEach((function(e){return e.setEventListeners()})),K.addEventListener("click",(function(){pe.open()})),G.addEventListener("click",(function(){oe[H.getAttribute("name")].resetValidation(),le.open()})),F.addEventListener("click",(function(){var e=ie.getUserInfo(),t=e.name,n=e.description;z.value=t,$.value=n,oe[M.getAttribute("name")].resetValidation(),fe.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,